{"version":3,"sources":["redux/reducers/authReducer.js","redux/reducers/chatReducer.js","redux/reducers/index.js","redux/types.js","utils/store.js","utils/history.js","utils/api.js","icons/icons.jsx","components/sidebar/SidebarChats.jsx","redux/actions/chat/index.js","redux/actions/auth/index.js","components/sidebar/SidebarProfile.jsx","components/forms/RenderForm.jsx","components/forms/LoginForm.jsx","components/forms/SignupForm.jsx","components/forms/NewChatForm.jsx","components/IconButton.jsx","components/ConfirmationModal.jsx","components/sidebar/Sidebar.jsx","pages/Landing.jsx","components/chats/ChatroomDisplay.jsx","components/chats/ChatContainer.jsx","pages/Chatroom.jsx","App.js","index.js"],"names":["INITIAL_STATE","isLoggedIn","_id","token","currentChatroom","user","combineReducers","auth","state","action","type","payload","chatrooms","_","mapKeys","console","log","chatroomId","messages","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","createBrowserHistory","axios","create","baseURL","headers","profileIcon","width","height","viewBox","className","fill","xmlns","fillRule","d","chatsIcon","plusIcon","pencilIcon","connect","createChatroom","name","userId","dispatch","a","api","post","createdBy","data","chat","history","push","error","setChatroom","displayChatRooms","closeChat","useState","newRoomName","setNewRoomName","onChange","e","target","value","handleForm","preventDefault","length","renderChatroomList","Object","keys","map","key","onClick","userLogout","getState","localStorage","removeItem","updateUser","deleteUser","editing","setEditing","modalDisplay","setModalDisplay","formValues","renderInput","input","label","meta","touched","renderError","profileDisplay","alt","Field","component","tabIndex","style","modalConfig","title","message","btnText","btnStyle","reduxForm","props","onSubmit","handleSubmit","initialValues","children","LoginForm","placeholder","required","SignupForm","NewChatForm","errorStyle","IconButton","classNames","icon","activeIcon","disabled","ConfirmationModal","handleDelete","Modal","show","onHide","ModalHeader","closeButton","ModalTitle","ModalBody","ModalFooter","Sidebar","setActiveIcon","icons","id","currentTarget","setCurrentIcon","userLogin","response","setItem","activeForm","setActiveForm","handleSignup","handleLogin","updateCurrentForm","messageList","useRef","useEffect","newMessage","current","lastElementChild","newMessageStyles","getComputedStyle","newMessageMargin","parseInt","marginBottom","newMessageHeight","offsetHeight","visibleHeight","scrollHeight","scrollTop","ref","messageKey","createdAt","timestamp","moment","format","author","Math","random","fetchMessages","get","setMessage","forEach","chatroom","renderChatContainer","checkAuth","getItem","fetchChatrooms","chats","path","exact","to","process","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.b4c3a513.chunk.js","sourcesContent":["import {\r\n  CHECK_AUTH,\r\n  LOG_IN,\r\n  LOG_OUT,\r\n  SET_CHATROOM,\r\n  UPDATE_USER\r\n} from '../types'\r\n\r\n// Do not modify\r\nconst INITIAL_STATE = {\r\n  isLoggedIn: false,\r\n  _id: null,\r\n  token: null,\r\n  currentChatroom: '5f52268b6d59e14df8174254',\r\n  user: {}\r\n}\r\n\r\nexport default (state=INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CHECK_AUTH:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    case SET_CHATROOM:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    case LOG_IN:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    case LOG_OUT:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import _ from 'lodash'\r\nimport {\r\n  CREATE_CHATROOM,\r\n  FETCH_CHATROOMS,\r\n  SEND_MESSAGE,\r\n  FETCH_MESSAGES,\r\n  CLOSE_CHAT,\r\n} from '../types';\r\n\r\nconst INITIAL_STATE = [];\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch(action.type) {\r\n    case FETCH_CHATROOMS:\r\n      return {\r\n        ...state,\r\n        ..._.mapKeys(action.payload, '_id')\r\n      }\r\n    case CREATE_CHATROOM:\r\n      return {\r\n        ...state,\r\n        [action.payload._id]: {\r\n          ...action.payload\r\n        }\r\n      }\r\n    case FETCH_MESSAGES:\r\n      console.log('state', state[action.payload.chatroomId])\r\n      console.log('fetch action', action.payload.chatroomId)\r\n      return {\r\n        ...state,\r\n        [action.payload.chatroomId]: {\r\n          ...state[action.payload.chatroomId],\r\n          messages: [\r\n            ...state[action.payload.chatroomId].messages,\r\n            ...action.payload.messages\r\n          ]\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport authReducer from './authReducer';\r\nimport chatReducer from './chatReducer';\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  chatrooms: chatReducer,\r\n  form: formReducer\r\n});\r\n","// Chat Action Types\r\nexport const CREATE_CHATROOM = 'CREATE_CHATROOM';\r\nexport const FETCH_CHATROOMS = 'FETCH_CHATROOMS';\r\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\r\nexport const FETCH_MESSAGES = 'FETCH_MESSAGES';\r\nexport const CLOSE_CHATROOM = 'CLOSE_CHATROOM';\r\nexport const SET_CHATROOM = 'SET_CHATROOM'\r\n\r\n// Authorization Action Types\r\nexport const CHECK_AUTH = 'CHECK_AUTH';\r\nexport const LOG_IN = 'LOG_IN';\r\nexport const LOG_OUT = 'LOG_OUT';\r\nexport const UPDATE_USER = 'UPDATE_USER';\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reduxThunk from 'redux-thunk';\r\nimport reducers from '../redux/reducers';\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n","import { createBrowserHistory } from 'history';\r\nexport default createBrowserHistory();\r\n","import axios from 'axios';\r\nexport default axios.create({\r\n  baseURL: process.env.NODE_ENV === 'production' ? 'https://young-oasis-67409.herokuapp.com' : 'http://localhost:5500',\r\n  headers: {'Content-Security-Policy': \"default-src *\"}\r\n})\r\n","import React from \"react\";\r\n\r\nexport const profileIcon = (\r\n  <svg width=\"1.2em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-person\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path fillRule=\"evenodd\" d=\"M10 5a2 2 0 1 1-4 0 2 2 0 0 1 4 0zM8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm6 5c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\"/>\r\n  </svg>\r\n)\r\n\r\nexport const chatsIcon = (\r\n  <svg width=\"1.2em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-chat-right-text\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path fillRule=\"evenodd\" d=\"M2 1h12a1 1 0 0 1 1 1v11.586l-2-2A2 2 0 0 0 11.586 11H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zm12-1a2 2 0 0 1 2 2v12.793a.5.5 0 0 1-.854.353l-2.853-2.853a1 1 0 0 0-.707-.293H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h12z\"/>\r\n    <path fillRule=\"evenodd\" d=\"M3 3.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zM3 6a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9A.5.5 0 0 1 3 6zm0 2.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5z\"/>\r\n  </svg>\r\n)\r\n\r\nexport const avatarIcon = (\r\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-person-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path fillRule=\"evenodd\" d=\"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"/>\r\n  </svg>\r\n)\r\n\r\nexport const plusIcon = (\r\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-plus-square\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path fillRule=\"evenodd\" d=\"M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\r\n    <path fillRule=\"evenodd\" d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\r\n  </svg>\r\n)\r\n\r\nexport const pencilIcon = (\r\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-pencil\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path fillRule=\"evenodd\" d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\"/>\r\n  </svg>\r\n)","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport history from '../../utils/history';\r\nimport { NewChatForm } from '../../components';\r\nimport { createChatroom } from '../../redux/actions/chat';\r\nimport { setChatroom } from '../../redux/actions/auth';\r\nimport { profileIcon } from \"../../icons/icons\";\r\n\r\nconst SidebarChats = ({ auth, chatrooms, setChatroom, displayChatRooms, createChatroom, closeChat }) => {\r\n  const [ newRoomName, setNewRoomName ] = useState('');\r\n\r\n  const handleClose = (key) => {\r\n    closeChat(key)\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setNewRoomName(e.target.value)\r\n  }\r\n\r\n  const handleForm = (e) => {\r\n    e.preventDefault()\r\n    if (newRoomName.length >= 5) {\r\n      createChatroom(newRoomName, auth._id)\r\n      setNewRoomName('')\r\n    }\r\n  }\r\n\r\n  const renderChatroom = (chatroomId) => {\r\n    setChatroom(chatroomId)\r\n    history.push(`/chats/${chatroomId}`)\r\n  }\r\n\r\n  const renderChatroomList = () => {\r\n    if (chatrooms === {}) {\r\n      return\r\n    }\r\n    return Object.keys(chatrooms).map(key => {\r\n      return (\r\n        <li key={key} className='chatroom__item'>\r\n          <div className='chatroom__icon col-2 my-auto text-secondary'>\r\n            {profileIcon}\r\n          </div>\r\n          <div className='col-8'>\r\n            <div className='col text-center text-white' >\r\n              <div onClick={() => renderChatroom(key)} className='chatroom__chatroom'> {/*used to be the LINK tag*/}\r\n                <div className='col text-center'>\r\n                  {chatrooms[key].name}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='chatroom__cta-col'>\r\n            <button  className='chatroom__cta-close p-0 text-secondary'>\r\n              <p className='chatroom__close'>&#128473;</p>\r\n            </button>\r\n          </div>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  const renderSidebarChats = () => {\r\n    return (\r\n      <ul className='chatroom__list list-unstyled'>\r\n        <li className='chatroom__new'>\r\n          <NewChatForm handleForm={handleForm} onChange={onChange} newRoomName={newRoomName} />\r\n        </li>\r\n        {renderChatroomList()}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className='chatroom__list my-3'>\r\n      {renderSidebarChats()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.auth,\r\n    chatrooms: state.chatrooms\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { createChatroom, setChatroom })(SidebarChats);\r\n","import api from '../../../utils/api'\r\nimport { store } from '../../../utils/store';\r\nimport history from \"../../../utils/history\";\r\nimport {\r\n  FETCH_CHATROOMS,\r\n  SET_CHATROOM,\r\n  NEW_MESSAGE,\r\n  FETCH_MESSAGES,\r\n  CLOSE_CHAT,\r\n  CREATE_CHATROOM\r\n} from '../../types'\r\n\r\n\r\n\r\n\r\n\r\n/* ----   FETCH_CHATROOMS ACTION CREATOR    ---- */\r\nexport const fetchChatrooms = () => async (dispatch, getState) => {\r\n  try {\r\n    const response = await api.get('/chatrooms/fetch');\r\n    console.log(response)\r\n\r\n    const chatrooms = response.data.chats.map(chat => {\r\n      const messages = getState().chatrooms.length !== 0 ? getState().chatrooms[chat._id].messages : [];\r\n      return { ...chat, messages: [...messages] }\r\n    })\r\n\r\n    dispatch({\r\n      type: FETCH_CHATROOMS,\r\n      payload: {...chatrooms}\r\n    })\r\n  } catch(e) {\r\n    console.log(e)\r\n  }\r\n}\r\n/* ----   ****    ---- */\r\n\r\n/* ----   ADD_CHATROOM ACTION CREATOR    ---- */\r\nexport const createChatroom = (name, userId) => async dispatch => {\r\n  try {\r\n    const { data } = await api.post(\r\n      '/chatrooms/create',\r\n      { name, createdBy: userId }\r\n    )\r\n    dispatch({\r\n               type: CREATE_CHATROOM,\r\n               payload: {...data.chat, messages: []}\r\n             })\r\n    history.push(`/chats/${data.chat._id}`)\r\n  } catch (e) {\r\n    dispatch({\r\n               type: 'ERROR',\r\n               error: 'Invalid Name'\r\n             })\r\n  }\r\n}\r\n/* ----   ****    ---- */\r\n\r\n/* ----   FETCH_MESSAGES ACTION CREATOR    ---- */\r\nexport const fetchMessages = (chatroomId) => async dispatch => {\r\n  console.log(chatroomId)\r\n  const { data } = await api.get(`/messages/fetch?chatroomId=${chatroomId}`);\r\n  console.log(data)\r\n  dispatch({ type: FETCH_MESSAGES, payload: {chatroomId, messages: data.messages }})\r\n}\r\n/* ----   ****    ---- */\r\n","import api from '../../../utils/api';\r\nimport history from '../../../utils/history';\r\nimport {\r\n  CHECK_AUTH,\r\n  LOG_IN,\r\n  LOG_OUT,\r\n  SET_CHATROOM,\r\n  UPDATE_USER\r\n} from '../../types';\r\n\r\n\r\n/* ----   CHECK_AUTH ACTION CREATOR    ---- */\r\nexport const checkAuth = () => async dispatch => {\r\n  const token = localStorage.getItem('jwt-token');\r\n  if (!token) {\r\n    return dispatch({\r\n      type: CHECK_AUTH,\r\n      payload: {\r\n        isLoggedIn: false,\r\n        token: null\r\n      }\r\n    })\r\n  }\r\n\r\n  const response = await api.get(\r\n    '/users/fetch',\r\n    {headers: {\r\n      'Authorization': `Bearer ${token}`\r\n      }\r\n    }\r\n  )\r\n\r\n  dispatch({\r\n    type: CHECK_AUTH,\r\n    payload: {\r\n      token,\r\n      _id: response.data._id,\r\n      isLoggedIn: true,\r\n      user: response.data.user\r\n    }\r\n  })\r\n}\r\n/* ----   ****    ---- */\r\n\r\n/* ----   LOG_IN ACTION CREATOR    ---- */\r\nexport const userLogin = formValues => async dispatch => {\r\n  const response = await api.post(\r\n    '/users/login',\r\n    { ...formValues }\r\n  )\r\n\r\n  localStorage.setItem('jwt-token', response.data.token)\r\n\r\n  dispatch({\r\n    type: LOG_IN,\r\n    payload: {\r\n      _id: response.data.user._id,\r\n      token: response.data.token,\r\n      user: response.data.user,\r\n      isLoggedIn: true,\r\n    }\r\n  })\r\n\r\n  history.push('/chats')\r\n}\r\n/* ----   ****    ---- */\r\n\r\n/* ----   LOG_OUT ACTION CREATOR    ---- */\r\nexport const userLogout = () => async (dispatch, getState) => {\r\n  const { token } = getState().auth\r\n\r\n  await api.post(\r\n    '/users/logout',\r\n    {},\r\n    {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    }\r\n  )\r\n  await localStorage.removeItem('jwt-token');\r\n\r\n  dispatch({\r\n    type: LOG_OUT,\r\n  })\r\n\r\n  history.push('/')\r\n}\r\n/* ----   ****    ---- */\r\n\r\n/* ----   SET_CHATROOM ACTION CREATOR    ---- */\r\nexport const setChatroom = (currentChatroom) => async dispatch => {\r\n  dispatch({\r\n    type: SET_CHATROOM,\r\n    payload: { currentChatroom }\r\n  })\r\n}\r\n/* ----   ****    ---- */\r\n","import React, { useState } from 'react';\r\n// import moment from 'moment';\r\n// import _ from 'lodash';\r\nimport { connect } from 'react-redux';\r\nimport { Field } from 'redux-form';\r\nimport { ConfirmationModal, RenderForm } from '../../components';\r\nimport { userLogout } from \"../../redux/actions/auth\";\r\nimport { pencilIcon } from \"../../icons/icons\";\r\n\r\nconst SidebarProfile = ({ auth, userLogout, updateUser, deleteUser }) => {\r\n  const [ editing, setEditing ] = useState('')\r\n  const [ modalDisplay, setModalDisplay ] = useState(false);\r\n  const modalConfig = {\r\n    title: 'Delete Account',\r\n    message: 'Are you sure you want to delete your account?',\r\n    btnText: 'Delete',\r\n    btnStyle: 'danger'\r\n  }\r\n\r\n  // const handleDelete = () => {\r\n  //   deleteUser();\r\n  // }\r\n\r\n  const handleForm = (formValues) => {\r\n    // updateUser(formValues)\r\n    setEditing('')\r\n  }\r\n\r\n  const renderError = ({ error, touched }) => {\r\n    if (touched && error) {\r\n      return (\r\n        <div className='ui error message'>\r\n          <div className='header'>{error}</div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderInput = ({ input, label, meta }) => {\r\n    const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\r\n    return (\r\n      <li className='list-group-item px-3'>\r\n        <div className={`row justify-content-between align-items-center ${className}`}>\r\n          <div className='col-3 text-left p-0'>\r\n            <label className='m-auto font-weight-bold'>\r\n              {label}\r\n            </label>\r\n          </div>\r\n          <div className='col-7'>\r\n            {editing === label ?\r\n              <input className='form-control text-left' {...input} /> :\r\n              <input className='form-control-plaintext text-left' {...input} />}\r\n          </div>\r\n          <div onClick={() => setEditing(label)} className='col-1 text-secondary'>\r\n            {pencilIcon}\r\n          </div>\r\n          {renderError(meta)}\r\n        </div>\r\n      </li>\r\n    )\r\n  }\r\n\r\n  const profileCard = () => {\r\n    return (\r\n      <>\r\n        <div className='card'>\r\n          <div className='card-img-top mx-auto'>\r\n            <img\r\n              className='mx-auto mt-3'\r\n              // src={`data:image/png;base64,${auth.data.avatar}`}\r\n              height='150'\r\n              width='150'\r\n              alt='avatar'\r\n            />\r\n\r\n          </div>\r\n          <div className='card-body'>\r\n            <RenderForm handleForm={handleForm} >\r\n              <ul className='list-group list-group-flush'>\r\n                <Field name='name' component={renderInput} label='Name' />\r\n                <Field name='username' component={renderInput} label='Username' />\r\n                <Field name='email' component={renderInput} label='Email' />\r\n                <Field name='password' component={renderInput} label='Password' />\r\n                <li className='list-group-item'>\r\n                  <div className='row justify-content-around'>\r\n                    <div className='col text-center'>\r\n                      User Since:\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n              <input type=\"submit\"\r\n                     className='profile__submit'\r\n                     tabIndex=\"-1\"/>\r\n            </RenderForm>\r\n            <ul className='list-group list-group-flush'>\r\n              <li className='list-group-item'>\r\n                <button onClick={() => {userLogout()}} className='btn btn-secondary mt-2'>\r\n                  Log Out\r\n                </button>\r\n              </li>\r\n              <li className='list-group-item '>\r\n                <button onClick={() => setModalDisplay(true)} className='btn btn-danger' >Delete Account</button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  const profileDisplay =  profileCard()\r\n\r\n  return (\r\n    <div className='d-flex flex-column m-3' style={{width: '90%'}}>\r\n      {profileDisplay}\r\n      <ConfirmationModal modalConfig={modalConfig} setModalDisplay={setModalDisplay} modalDisplay={modalDisplay}  />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { userLogout })(SidebarProfile);\r\n","import React from 'react';\r\nimport { reduxForm } from \"redux-form\";\r\n\r\nconst RenderForm = (props) => {\r\n  const handleForm = formValues => {\r\n    const {initialValues} = props;\r\n    //\r\n    if (!initialValues) {\r\n      return props.handleForm(formValues);\r\n    }\r\n    //\r\n    // const valuesToValidate = Object.keys(formValues)\r\n    // if (valuesToValidate.some(value => formValues[value] === '')) {\r\n    //   props.reset();\r\n    // }\r\n    //\r\n    // let updateValues = {};\r\n    // Object.keys(initialValues).forEach((value) => {\r\n    //    if (initialValues[value] !== formValues[value]) {\r\n    //      updateValues = { ...updateValues,  [value]: formValues[value] }\r\n    //    }\r\n    // })\r\n    // props.handleForm(updateValues);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit(handleForm)} className='form-signin mt-2'>\r\n      {props.children}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({ form: 'userForm' })(RenderForm);\r\n","import React from 'react';\r\nimport { Field } from \"redux-form\";\r\nimport RenderForm from \"./RenderForm\";\r\n\r\nconst LoginForm = (props) => {\r\n\r\n  const renderInput = ({ input, label, type }) => {\r\n    return (\r\n      <div>\r\n        <label className='text-white text-left my-2' >{label}</label>\r\n        <input className='form-control' placeholder={label} {...input} type={type} required />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const handleForm = formValues => {\r\n    props.handleForm(formValues);\r\n  }\r\n\r\n  return(\r\n    <RenderForm handleForm={handleForm}>\r\n      <div className='ui stacked element'>\r\n        <Field name='username' component={renderInput} label='Username' type='text' />\r\n        <Field name='password' component={renderInput} label='Password' type='password' />\r\n        <button className='btn btn-md btn-secondary btn-block my-4 mx-auto w-25'>Submit</button>\r\n      </div>\r\n      <div className='d-flex w-100 justify-content-center text-white'>\r\n        <div className='col'>\r\n          <p className='m-0 p-0'>Sample User Credentials</p>\r\n          <p className='m-0 p-0'>Username: sampleuser</p>\r\n          <p className='m-0 p-0'>Password: examplepass000</p>\r\n        </div>\r\n      </div>\r\n    </RenderForm>\r\n  )\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport { Field, } from \"redux-form\";\r\nimport RenderForm from \"./RenderForm\";\r\n\r\nconst SignupForm = (props) => {\r\n\r\n  const renderInput = ({ input, label, type }) => {\r\n    return (\r\n      <div>\r\n        <label className='text-white text-left my-2' >{label}</label>\r\n        <input className='form-control' type={type} placeholder={label} {...input} required />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const handleForm = formValues => {\r\n    props.handleForm(formValues);\r\n  }\r\n\r\n  return(\r\n    <RenderForm handleForm={handleForm}>\r\n      <Field name='name' component={renderInput} label='Name' type='text' />\r\n      <Field name='username' component={renderInput} label='Username' type='text' />\r\n      <Field name='email' component={renderInput} label='Email' type='email' />\r\n      <Field name='password' component={renderInput} label='Password' type='password' />\r\n      <Field name='passwordConf' component={renderInput} label='Confirm Password' type='password' />\r\n      <button className='btn btn-md btn-secondary btn-block mt-4 mx-auto w-50'>Submit</button>\r\n    </RenderForm>\r\n  )\r\n}\r\n\r\nexport default SignupForm;\r\n","import React from 'react';\r\nimport { plusIcon } from \"../../icons/icons\";\r\n\r\nconst NewChatForm = (props) => {\r\n\r\n  const onChange = e => {\r\n    props.onChange(e)\r\n  }\r\n\r\n  const handleForm = e => {\r\n    props.handleForm(e)\r\n  }\r\n\r\n  const errorStyle = props.newRoomName.length < 5 && props.newRoomName.length !== 0 ? 'is-invalid' : null\r\n\r\n  return (\r\n    <form className='w-100' onSubmit={handleForm}>\r\n      <div\r\n        className='chatroom__form'\r\n      >\r\n        <div className='d-flex justify-content-end col-3 mx-auto'>\r\n          <button\r\n            type='submit'\r\n            className='chatroom__cta-new btn p-0'\r\n          >\r\n            <div className='chatroom__new-cta text-secondary'>\r\n              {plusIcon}\r\n            </div>\r\n          </button>\r\n        </div>\r\n        <div className='col-9'>\r\n          <input onChange={onChange} className={`form-control ${errorStyle}`} type='text' placeholder={'Create Chat Room....'} name='chatForm' required/>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default NewChatForm;\r\n","import React from 'react';\r\nimport classNames from \"classnames\";\r\nimport { profileIcon, chatsIcon } from \"../icons/icons\";\r\n\r\nconst IconButton = (props) => {\r\n  const renderIcon = () => {\r\n    if (props.icon === 'profile') {\r\n      return profileIcon;\r\n    }\r\n    if (props.icon === 'chats') {\r\n      return chatsIcon;\r\n    }\r\n  }\r\n  return (\r\n    <button\r\n      className={classNames( 'icon__button',\r\n        'btn btn-outline-dark p-0',\r\n        {\r\n          'text-white': props.icon === props.activeIcon,\r\n          'text-secondary': props.icon !== props.activeIcon\r\n        }\r\n      )}\r\n      disabled={props.icon === props.activeIcon}\r\n    >\r\n      {renderIcon()}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default IconButton;\r\n","import React from 'react';\r\nimport Modal  from 'react-bootstrap/Modal';\r\nimport ModalFooter from 'react-bootstrap/ModalFooter';\r\nimport ModalBody from 'react-bootstrap/ModalBody';\r\nimport ModalTitle from 'react-bootstrap/ModalTitle';\r\nimport ModalHeader from 'react-bootstrap/ModalHeader';\r\n\r\n\r\nconst ConfirmationModal = ({modalConfig, setModalDisplay, modalDisplay, handleDelete}) => {\r\n  const handleDeleteClick = () => {\r\n    setModalDisplay(false)\r\n    handleDelete();\r\n  }\r\n\r\n  if (modalDisplay) {\r\n    return (\r\n      <Modal show={modalDisplay} onHide={() => setModalDisplay(false)}>\r\n        <ModalHeader closeButton>\r\n          <ModalTitle>\r\n            {modalConfig.title}\r\n          </ModalTitle>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <p>{modalConfig.message}</p>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <button onClick={() => setModalDisplay(false)} type='button' className='btn btn-secondary'>\r\n            Cancel\r\n          </button>\r\n          <button onClick={() => handleDeleteClick()} className={`btn btn-${modalConfig.btnStyle}`}>\r\n            {modalConfig.btnText}\r\n          </button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    )\r\n  }\r\n  return <></>\r\n}\r\n\r\nexport default ConfirmationModal;","import React, { useState } from 'react';\r\nimport { IconButton, SidebarProfile, SidebarChats,  } from '../../components';\r\n\r\n\r\nconst Sidebar = (props) => {\r\n  const [ activeIcon, setActiveIcon ] = useState('chats')\r\n  const icons = ['profile', 'chats']\r\n\r\n  const setCurrentIcon = (e) => {\r\n    if (e.currentTarget.id === 'profile-cta') {\r\n      setActiveIcon('profile');\r\n    }\r\n    if (e.currentTarget.id === 'chats-cta') {\r\n      setActiveIcon('chats');\r\n    }\r\n  }\r\n\r\n  const renderIcons = () => {\r\n    return icons.map(icon => {\r\n      return (\r\n        <li\r\n          id={`${icon}-cta`}\r\n          key={icon}\r\n          className='nav-item'\r\n          onClick={(e) => setCurrentIcon(e)}\r\n        >\r\n          <IconButton icon={icon} activeIcon={activeIcon} />\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  const renderSidebarContent = () => {\r\n    if (activeIcon === 'profile') {\r\n      return <SidebarProfile />\r\n    }\r\n    if (activeIcon === 'chats') {\r\n      return <SidebarChats />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='sidebar__content'>\r\n      <nav className='sidebar__nav'>\r\n        <div className='sidebar__row py-4'>\r\n          <h2 className='text-white'>WhatsChat</h2>\r\n        </div>\r\n        <div className='sidebar__row'>\r\n          <div className='sidebar__break'></div>\r\n        </div>\r\n        <div className='sidebar__row'>\r\n          <ul className='sidebar__list list-unstyled components py-3 mb-0'>\r\n            { renderIcons() }\r\n          </ul>\r\n        </div>\r\n        <div className='sidebar__row'>\r\n          <div className='sidebar__break'></div>\r\n        </div>\r\n        <div className='sidebar__row'>\r\n          { props.auth ? renderSidebarContent() : <div>Sign In or Create an account to see available rooms and profile</div> }\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { SignupForm, LoginForm } from '../components';\r\nimport { userLogin } from \"../redux/actions/auth\";\r\nimport classNames from 'classnames';\r\n\r\n\r\nconst Landing = (props) => {\r\n  const [activeForm, setActiveForm] = useState('signup');\r\n\r\n  const handleSignup = (formValues) => {\r\n    // props.userSignup\r\n  }\r\n\r\n  const handleLogin = (formValues) => {\r\n    props.userLogin(formValues)\r\n  }\r\n\r\n  const updateCurrentForm = () => {\r\n    if (activeForm === 'signup') {\r\n      setActiveForm('login')\r\n    }\r\n    if (activeForm === 'login') {\r\n      setActiveForm('signup')\r\n    }\r\n  }\r\n\r\n  const renderForm = () => {\r\n    return activeForm === 'signup' ?\r\n      <SignupForm\r\n        handleForm={handleSignup}\r\n      />\r\n      :\r\n      <LoginForm\r\n        handleForm={handleLogin}\r\n      />;\r\n  }\r\n\r\n  return (\r\n    <div className='landing__area col'>\r\n      <div className='landing__container container pb-3 px-3 bg-dark'>\r\n        <div className='row mb-2'>\r\n          <div className='col p-0'>\r\n            <button\r\n              onClick={() => updateCurrentForm()}\r\n              className={classNames({\r\n                                      'btn btn-large text-white w-100 p-3': true,\r\n                                      'btn-outline-dark': activeForm === 'signup',\r\n                                      'btn-secondary': activeForm === 'login'\r\n                                    })}\r\n              disabled={activeForm === 'signup'}\r\n            >\r\n              Sign Up Here!\r\n            </button>\r\n          </div>\r\n\r\n          <div className='col h-100 p-0'>\r\n            <button\r\n              onClick={() => updateCurrentForm()}\r\n              className={classNames({\r\n                                      'btn btn-large text-white w-100 p-3': true,\r\n                                      'btn-outline-dark disabled': activeForm === 'login',\r\n                                      'btn-secondary': activeForm === 'signup'\r\n                                    })}\r\n              disabled={activeForm === 'login'}\r\n            >\r\n              Log In Here!\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {renderForm()}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(null, { userLogin })(Landing);\r\n","import React, { useRef, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst ChatroomDisplay = ({ messages, auth }) => {\r\n  const messageList = useRef(null);\r\n\r\n  const autoscroll = () => {\r\n    // new message element\r\n    const newMessage = messageList.current.lastElementChild;\r\n\r\n    if (!newMessage) {return};\r\n\r\n    // get the height of the newMessage\r\n    const newMessageStyles = getComputedStyle(newMessage.lastElementChild);\r\n    const newMessageMargin = parseInt(newMessageStyles.marginBottom);\r\n    const newMessageHeight = messageList.current.offsetHeight + newMessageMargin;\r\n\r\n    // get the visible height\r\n    const visibleHeight = messageList.current.offsetHeight;\r\n\r\n    // get the message container height\r\n    const contentHeight = messageList.current.scrollHeight;\r\n\r\n    // Current scroll location\r\n    const scrollOffset = messageList.current.scrollTop + visibleHeight;\r\n\r\n    if (contentHeight - newMessageHeight <= scrollOffset) {\r\n      // this will set the scroll top position to the maximum scroll top value being the bottom of the page\r\n      messageList.current.scrollTop = messageList.current.scrollHeight;\r\n    }\r\n  };\r\n\r\n  useEffect(autoscroll, [messages.length])\r\n\r\n\r\n  const formatTimestamp = (createdAt) => {\r\n    return moment(createdAt).format('h:mm A');\r\n  }\r\n\r\n  const renderMessages = () => {\r\n    const messageKeysArray = Object.keys(messages) ;\r\n\r\n    return messageKeysArray.map(messageKey => {\r\n      const timestamp = formatTimestamp(messages[messageKey].createdAt)\r\n      if (messages[messageKey].author === 'systemManager') {\r\n        return (\r\n          <li key={Math.random()*1000} className='chat__message chat__message-system'>\r\n            <div key={messageKey} className='text-white text-left'>{messages[messageKey].message}</div>\r\n          </li>\r\n        )\r\n      }\r\n\r\n      if (messages[messageKey].userId !== auth._id) {\r\n        return (\r\n          <li key={messageKey} className='chat__messages chat__messages-rec'>\r\n            <div className=\"chat__bubble chat__bubble-rec\">\r\n              <div className={`chat__content px-2 py-1`}>\r\n                <div className={`chat__area py-0 mr-1`}>\r\n                  <p className='chat__text chat__text-author' >\r\n                    {messages[messageKey].author}\r\n                  </p>\r\n                  <p className='chat__text chat__text-message'>{messages[messageKey].message}</p>\r\n                </div>\r\n                <div className={`chat__footer ml-1`}>\r\n                  <div className='chat__timestamp'>\r\n                    {timestamp}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        )\r\n      }\r\n\r\n      return (\r\n        <li key={messageKey} className='chat__messages chat__messages-sent'>\r\n          <div className=\"chat__bubble chat__bubble-sent\">\r\n            <div className={`chat__content px-2 py-1`}>\r\n              <div className={`chat__area py-0 mr-1`}>\r\n                <p className='chat__text chat__text-message'>{messages[messageKey].message}</p>\r\n              </div>\r\n              <div className={`chat__footer ml-1 text-white`}>\r\n                <div className='chat__timestamp'>\r\n                  {timestamp}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='chat__container'>\r\n      <ul className='chat__display chat__display-scroll ' ref={messageList}>\r\n        {messages ? renderMessages() : <div className='text-white'>Send a message!!</div>}\r\n      </ul>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ChatroomDisplay);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchMessages } from '../../redux/actions/chat';\r\nimport { default as ChatroomDisplay } from './ChatroomDisplay';\r\n\r\n\r\nconst ChatContainer = ({ auth, chatrooms, fetchMessages }) => {\r\n  const [ message, setMessage ] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    Object.keys(chatrooms).forEach((chatroom) => {\r\n      console.log(chatroom)\r\n      fetchMessages(chatroom)\r\n    })\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n  const onChange = e => {\r\n    setMessage(e.target.value)\r\n  }\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    // sendMessage({\r\n    //               chatRoomId,\r\n    //               message,\r\n    //               userId: auth._id,\r\n    //               author: auth.data.username\r\n    //             })\r\n    // setMessage('')\r\n  }\r\n\r\n  return (\r\n    <div className='chatroom__display bg-secondary'>\r\n      <div className='chatroom__container'>\r\n        <div className='chatroom__heading'>\r\n          <h2 className='chatroom__title'>{chatrooms[auth.currentChatroom].name}</h2>\r\n        </div>\r\n        <ChatroomDisplay messages={chatrooms[auth.currentChatroom].messages}  />\r\n        <div className='chatroom__input mb-2 mx-auto'>\r\n          <form className='w-100' >\r\n            <div className='row '>\r\n              <div className='col-10'>\r\n                <input\r\n                  className='form-control w-100'\r\n                  placeholder='Message...'\r\n                  type='text'\r\n                  value={message}\r\n                  onChange={onChange}\r\n                />\r\n              </div>\r\n              <div className='col-2'>\r\n                <button className='btn btn-md btn-outline-secondary '>\r\n                  Send\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth,\r\n    chatrooms: state.chatrooms\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchMessages })(ChatContainer);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {ChatContainer} from \"../components/chats\";\r\n\r\n\r\nconst Chatroom = ({ chatrooms }) => {\r\n   const renderChatContainer = chatrooms.length !== 0 ? <ChatContainer /> : <div>Click on a chat room to enter</div>\r\n\r\n  return(\r\n    <>\r\n      {renderChatContainer}\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth,\r\n    chatrooms: state.chatrooms\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {  })(Chatroom);\r\n","import React, { useEffect } from 'react';\r\nimport { Redirect, Router, Route, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport history from './utils/history';\r\nimport Sidebar from './components/sidebar/Sidebar';\r\nimport Landing from './pages/Landing';\r\nimport Chatroom from \"./pages/Chatroom\";\r\nimport { checkAuth } from './redux/actions/auth';\r\nimport { fetchChatrooms } from './redux/actions/chat';\r\nimport './styles/bootstrap.min.css';\r\nimport './styles/styles.css'\r\n\r\n\r\nconst App = ({ auth, checkAuth, fetchChatrooms }) => {\r\n  useEffect(() => {\r\n    checkAuth()\r\n    if (auth.isLoggedIn) {\r\n      fetchChatrooms();\r\n    }\r\n  }, [auth.isLoggedIn, checkAuth, fetchChatrooms])\r\n  return (\r\n    <div className='wrapper d-flex align-items-stretch'>\r\n      <Router history={history}>\r\n        <>\r\n          <Sidebar auth={auth.isLoggedIn} />\r\n          <Switch>\r\n            <Route path='/' exact>\r\n              { auth.isLoggedIn ? <Redirect to='/chats' /> : <Landing /> }\r\n            </Route>\r\n            <Route path='/chats' >\r\n              { auth.isLoggedIn ? <Chatroom /> : <Redirect to='/' /> }\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      </Router>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { checkAuth, fetchChatrooms })(App);\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './utils/store';\r\nimport App from './App';\r\n\r\nconsole.log('ENV:', process.env.NODE_ENV)\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}